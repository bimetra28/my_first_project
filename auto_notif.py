import psycopg2
import requests
import telebot
import time
from config import *

bot = telebot.TeleBot(api_bot)

connection = psycopg2.connect(
    host=host,
    user=user,
    password=password,
    database=db_name
)

def schedule_checker():
    id = 0
    while True:
        cur_time = time.strftime('%H:%M', time.localtime())
        with connection.cursor() as cursor:
            cursor.execute(
                "SELECT time, users_id FROM users_data"
            )
            data = cursor.fetchall()
        for i in data:
            if i[0] == cur_time:
                id = i[1]
                weather(id)
        time.sleep(60)

def weather(id):
    condition = {
        'clear': '—è—Å–Ω–æ \U00002600', 'partly-cloudy': '–º–∞–ª–æ–æ–±–ª–∞—á–Ω–æ \U00002601',
        'cloudy': '–æ–±–ª–∞—á–Ω–æ —Å –ø—Ä–æ—è—Å–Ω–µ–Ω–∏—è–º–∏ \U00002601',
        'overcast': '–ø–∞—Å–º—É—Ä–Ω–æ \U00002601', 'drizzle': '–º–æ—Ä–æ—Å—å \U00002614', 'light-rain': '–Ω–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å \U00002614',
        'rain': '–¥–æ–∂–¥—å \U00002614', 'moderate-rain': '—É–º–µ—Ä–µ–Ω–Ω–æ-—Å–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å \U00002614',
        'heavy-rain': '—Å–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å \U00002614',
        'continuous-heavy-rain': '–¥–ª–∏—Ç–µ–ª—å–Ω—ã–π —Å–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å \U00002614', 'showers': '–ª–∏–≤–µ–Ω—å \U00002614',
        'wet-snow': '–¥–æ–∂–¥—å —Å–æ —Å–Ω–µ–≥–æ–º \U00002614', 'light-snow': '–Ω–µ–±–æ–ª—å—à–æ–π —Å–Ω–µ–≥ \U0001F328', 'snow': '—Å–Ω–µ–≥ \U0001F328',
        'snow-showers': '—Å–Ω–µ–≥–æ–ø–∞–¥ \U0001F328', 'hail': '–≥—Ä–∞–¥ \U0001F328', 'thunderstorm': '–≥—Ä–æ–∑–∞ \U000026A1',
        'thunderstorm-with-rain': '–¥–æ–∂–¥—å —Å –≥—Ä–æ–∑–æ–π \U000026A1', 'thunderstorm-with-hail': '–≥—Ä–æ–∑–∞ —Å –≥—Ä–∞–¥–æ–º \U000026A1'
    }
    wind_dir = {
        'nw': '—Å–µ–≤–µ—Ä–æ-–∑–∞–ø–∞–¥–Ω–æ–µ', 'n': '—Å–µ–≤–µ—Ä–Ω–æ–µ', 'ne': '—Å–µ–≤–µ—Ä–æ-–≤–æ—Å—Ç–æ—á–Ω–æ–µ', 'e': '–≤–æ—Å—Ç–æ—á–Ω–æ–µ',
                'se': '—é–≥–æ-–≤–æ—Å—Ç–æ—á–Ω–æ–µ', 's': '—é–∂–Ω–æ–µ', 'sw': '—é–≥–æ-–∑–∞–ø–∞–¥–Ω–æ–µ', 'w': '–∑–∞–ø–∞–¥–Ω–æ–µ', '—Å': '—à—Ç–∏–ª—å'
    }
    part_name = {
        'night': '\U0001F31B –ù–æ—á—å—é', 'morning': 'üåÖ –£—Ç—Ä–æ–º', 'day': '\U0001F31E –î–Ω—ë–º', 'evening': 'üåá –í–µ—á–µ—Ä–æ–º'
    }

    try:
        try:
            with connection.cursor() as cursor:
                cursor.execute(
                    "SELECT city, latitude, longitude FROM users_data WHERE users_id = %s", (id,)
                )
                database_data = cursor.fetchone()
            bot.send_message(id, '–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã.')
        except:
            bot.send_message(id, '–ü—Ä–æ–±–ª–µ–º—ã —Å –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.')
        site = f'https://api.weather.yandex.ru/v2/informers?lat={database_data[1]}&lon={database_data[2]}&lang=ru_RU'
        r = requests.get(site, headers={'X-Yandex-API-Key': api_weather})
        data = r.json()
        cur_temp = data['fact']['temp']
        feels_like = data['fact']['feels_like']
        ws = data['fact']['wind_speed']
        wd = data['fact']['wind_dir']
        sunrise = data['forecast']['sunrise']
        sunset = data['forecast']['sunset']
        cond = data['fact']['condition']
        fact_pres = data['fact']['pressure_mm']
        first_part = data['forecast']['parts'][0]['part_name']
        fp_max_temp = data['forecast']['parts'][0]['temp_max']
        fp_min_temp = data['forecast']['parts'][0]['temp_min']
        fp_cond = data['forecast']['parts'][0]['condition']
        fp_prec_prob = data['forecast']['parts'][0]['prec_prob']
        fp_wind_speed = data['forecast']['parts'][0]['wind_speed']
        fp_wind_dir = data['forecast']['parts'][0]['wind_dir']
        fp_pressure = data['forecast']['parts'][0]['pressure_mm']
        sec_part = data['forecast']['parts'][1]['part_name']
        sp_max_temp = data['forecast']['parts'][1]['temp_max']
        sp_min_temp = data['forecast']['parts'][1]['temp_min']
        sp_cond = data['forecast']['parts'][1]['condition']
        sp_prec_prob = data['forecast']['parts'][1]['prec_prob']
        sp_wind_speed = data['forecast']['parts'][1]['wind_speed']
        sp_wind_dir = data['forecast']['parts'][1]['wind_dir']
        sp_pressure = data['forecast']['parts'][1]['pressure_mm']
        text = f'   –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ –≥–æ—Ä–æ–¥–µ {database_data[0]} {cur_temp}¬∞–° (–æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {feels_like}¬∞–°), {condition[cond]}.\n' \
               f'–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ {ws} –º/—Å, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ {wind_dir[wd]}\n' \
               f'–ê—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–≤–Ω—è–µ—Ç—Å—è {fact_pres} –º–º —Ä—Ç.—Å—Ç.\n' \
               f'   –í–æ—Å—Ö–æ–¥ —Å–µ–≥–æ–¥–Ω—è –≤ {sunrise}, –∑–∞–∫–∞—Ç –≤ {sunset}.\n\n' \
               f'   {part_name[first_part]} —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –ø–æ–¥–Ω–∏–º–µ—Ç—Å—è –¥–æ {fp_max_temp}¬∞–°, –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å–æ—Å—Ç–∞–≤–∏—Ç {fp_min_temp}¬∞–°, {condition[fp_cond]}\n' \
               f'–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –≤—ã–ø–∞–¥–µ–Ω–∏—è –æ—Å–∞–¥–∫–æ–≤ –±—É–¥–µ—Ç —Ä–∞–≤–Ω–∞ {fp_prec_prob}%\n' \
               f'–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ {fp_wind_speed} –º/—Å, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ {wind_dir[fp_wind_dir]}\n' \
               f'–ê—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–∞–≤–∏—Ç {fp_pressure} –º–º —Ä—Ç.—Å—Ç.\n\n' \
               f'   {part_name[sec_part]} —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –ø–æ–¥–Ω–∏–º–µ—Ç—Å—è –¥–æ {sp_max_temp}¬∞–°, –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å–æ—Å—Ç–∞–≤–∏—Ç {sp_min_temp}¬∞–°, {condition[sp_cond]}\n' \
               f'–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –≤—ã–ø–∞–¥–µ–Ω–∏—è –æ—Å–∞–¥–∫–æ–≤ –±—É–¥–µ—Ç —Ä–∞–≤–Ω–∞ {sp_prec_prob}%\n' \
               f'–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ {sp_wind_speed} –º/—Å, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ {sp_wind_dir}\n' \
               f'–ê—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–∞–≤–∏—Ç {sp_pressure} –º–º —Ä—Ç.—Å—Ç.\n'
        bot.send_message(id, text)
    except:
        bot.send_message(id, '–ö–∞–∂–µ—Ç—Å—è —Å–æ —Å–≤–æ–¥–∫–æ–π –ø–æ–≥–æ–¥—ã –∫–∞–∫–∏–µ-—Ç–æ –ø—Ä–æ–±–ª–µ–º—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –î–∏–º–µ.')


if __name__ == '__main__':
    schedule_checker()
